import{g as Z,B as s,a7 as l,a4 as _,u as R,r as ee}from"./entry.6C5gcV41.js";const oe=Z({__name:"CldUploadWidget",props:{onClose:{type:Function},onError:{type:Function},onOpen:{type:Function},onUpload:{type:Function},onAbort:{type:Function},onBatchCancelled:{type:Function},onDisplayChanged:{type:Function},onPublicId:{type:Function},onQueuesEnd:{type:Function},onQueuesStart:{type:Function},onRetry:{type:Function},onShowCompleted:{type:Function},onSourceChanged:{type:Function},onSuccess:{type:Function},onTags:{type:Function},onUploadAdded:{type:Function},options:{},signatureEndpoint:{},uploadPreset:{}},setup(M){function O(e){return window&&"requestIdleCallback"in window?requestIdleCallback(e):setTimeout(()=>e(),1)}const A=["success","display-changed"],D=M,{onClose:p,onError:f,onOpen:y,onUpload:g,options:W,signatureEndpoint:c,uploadPreset:q,onAbort:z,onBatchCancelled:N,onDisplayChanged:Q,onPublicId:j,onQueuesEnd:k,onQueuesStart:B,onRetry:K,onShowCompleted:L,onSourceChanged:$,onSuccess:H,onTags:x,onUploadAdded:G}=D,d=s(),n=s(),J=!!c,a=s(void 0),i=s(void 0),h=s(!0),V={close:m,destroy:C,hide:S,isDestroyed:w,isMinimized:F,isShowing:b,minimize:E,open:T,show:I,update:P,abort:z,"batch-cancelled":N,"display-changed":Q,publicid:j,"queues-end":k,"queues-start":B,retry:K,"show-completed":L,"source-changed":$,success:H,tags:x,"upload-added":G},r={cloudName:l().public.cloudinary.cloudName,uploadPreset:q||l().public.cloudinary.uploadPreset,apiKey:l().public.cloudinary.apiKey,...W,...V};J&&(r.uploadSignature=Y,r.apiKey||console.warn("Missing dependency: Signed Upload requires an API key")),_(i,()=>{var o,U;if(typeof i.value>"u")return;const e=((o=i.value)==null?void 0:o.event)==="success",u=((U=i.value)==null?void 0:U.event)==="display-changed"&&i.value.info==="hidden";e&&typeof g=="function"&&g(i,n.value),u&&typeof p=="function"&&p(n.value)}),_(a,()=>{a.value&&typeof f=="function"&&f(a,n.value)});function X(){h.value=!1,d.value||(d.value=window.cloudinary),O(()=>{n.value||(n.value=v())})}function Y(e,u){if(typeof c>"u")throw Error("Failed to generate signature: signatureEndpoint undefined.");fetch(c,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({paramsToSign:u})}).then(o=>o.json()).then(({signature:o})=>{e(o)})}function v(){var e;return(e=d.value)==null?void 0:e.createUploadWidget(r,(u,o)=>{typeof u<"u"&&(a.value=u),A.includes(o==null?void 0:o.event)&&(i.value=o)})}function t(e){n.value||(n.value=v()),typeof(n==null?void 0:n.value[e])=="function"&&n.value[e]()}function m(){t("close")}function C(){t("destroy")}function S(){t("hide")}function w(){t("isDestroyed")}function F(){t("isMinimized")}function b(){t("isShowing")}function E(){t("minimize")}function I(){t("show")}function P(){t("update")}function T(){t("open"),typeof y=="function"&&y(n.value)}return R({script:[{id:`cloudinary-uploadwidget-${Math.floor(Math.random()*100)}`,src:"https://widget.cloudinary.com/v2.0/global/all.js",onload:X,onerror:e=>console.error(`Failed to load Cloudinary Upload Widget: ${e.message}`)}]}),(e,u)=>ee(e.$slots,"default",{cloudinary:d.value,widget:n.value,open:T,update:P,show:I,isShowing:b,isMinimized:F,isDestroyed:w,destroy:C,close:m,hide:S,minimize:E,results:i.value,error:a.value,isLoading:h.value})}});export{oe as _};
